<?php

/**
 * @file
 * Drush Subtree Example module.
 */

/**
 * Implements hook_menu().
 */
function drushsubtreeexamplemodule_menu() {
  $items = array();

  $items['drushsubtreeexamplemodule'] = array(
    'page callback' => 'drushsubtreeexamplemodule_view',
    'access callback' => TRUE,
  );
  $items['drushsubtreeexamplemodule/%'] = array(
    'page callback' => 'drushsubtreeexamplemodule_rhyme_view',
    'page arguments' => array(1),
    'access callback' => TRUE,
  );

  return $items;
}

/**
 * Page callback for /drushsubtreeexamplemodule.
 */
function drushsubtreeexamplemodule_view() {
  $variables = array(
    'items' => array(),
    'title' => t('Rhymes'),
    'type' => 'ul',
  );
  foreach (drushsubtreeexamplemodule_get_rhymes() as $name => $filepath) {
    $variables['items'][]['data'] = l($name, "drushsubtreeexamplemodule/$name");
  }
  return theme('item_list', $variables);
}

/**
 * Page callback for drushsubtreeexamplemodule/%.
 */
function drushsubtreeexamplemodule_rhyme_view($name) {
  $rhymes = drushsubtreeexamplemodule_get_rhymes();

  // Error handling.
  if (!isset($rhymes[$name])) {
    drupal_set_message(t('Sorry. No rhyme by this name is available: !name',
      array('!name' => $name)), 'warning');
    return;
  }

  // Get rhyme. Format plain text.
  $contents = file_get_contents($rhymes[$name]);
  $contents = check_plain($contents);
  $output = check_markup($contents, 'plain_text');

  return $output;
}

/**
 * Returns array of file paths from rhymes directory keyed by name.
 *
 * @return array
 *   Rhyme files keyed by file name.
 */
function drushsubtreeexamplemodule_get_rhymes() {
  $rhymes = array();
  $directory = drupal_get_path('module', 'drushsubtreeexamplemodule') . '/rhymes';
  foreach (file_scan_directory($directory, '/.*/') as $file) {
    $rhymes[$file->name] = "$directory/{$file->filename}";
  }
  return $rhymes;
}
